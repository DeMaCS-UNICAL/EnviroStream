#show least_rainy_city/1.

station("Weather Station WS01").
station("Weather Station WS02").

rain_now(C,Rain,@now) :- rain(C, Rain).
rain_1_hour(C, Rain, X) :- rain_now(C, Rain, X) in [60 min].

precedes(S,T1,T2) :- rain_1_hour(S,R1,T1), rain_1_hour(S,R2,T2), T1<T2.
successor(S,X,Y) :- precedes(S,X,Y), not inBetween(S,X,Y).
inBetween(S,X,Y) :- precedes(S,X,Z), precedes(S,Z,Y).
first(S,T) :- rain_1_hour(S,R,T), not hasPredecessor(S,T).
last(S,T) :- rain_1_hour(S,R,T), not hasSuccessor(S,T).
hasPredecessor(S,X) :- successor(S,Y,X).
hasSuccessor(S,Y) :- successor(S,Y,X).

partialSum(S,T,R) :- first(S,T), rain_1_hour(S,R,T). 
partialSum(S,T2,R3) :- successor(S,T1,T2), rain_1_hour(S,R2,T2), partialSum(S,T1,PS), &sum(PS,R2;R3).
mm_rain_1_hour(S,R) :- last(S,T), partialSum(S,T,R).

precedes_rain(M1,M2) :- mm_rain_1_hour(S1,M1), mm_rain_1_hour(S2,M2), S1!=S2, &lt(M1,M2;).
successor_rain(X,Y) :- precedes_rain(X,Y), not inBetween_rain(X,Y).
inBetween_rain(X,Y) :- precedes_rain(X,Z), precedes_rain(Z,Y).
min_mm_rain_1_hour(M) :- mm_rain_1_hour(S,M), not hasPredecessor_rain(M).

hasPredecessor_rain(X) :- successor_rain(Y,X).
least_rainy_city(Sensor) :- mm_rain_1_hour(Sensor, MIN), min_mm_rain_1_hour(MIN).
